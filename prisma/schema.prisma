generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model PcBanner {
  id        Int      @id @default(autoincrement())
  src       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  alt       String?
  title     String?
  href      String?  @db.LongText
  date      String?
}

model MobieBanner {
  id        Int      @id @default(autoincrement())
  src       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  alt       String?
  title     String?
  href      String?  @db.LongText
  date      String?
}

model User {
  id                           Int                            @id @default(autoincrement())
  name                         String
  avatar                       String?
  createdAt                    DateTime                       @default(now())
  updatedAt                    DateTime                       @updatedAt
  name_2                       String?
  roll                         Int?
  tokens                       Token[]
  SSG_DFINARY_TrackingLinkList SSG_DFINARY_TrackingLinkList[]
}

model Token {
  id        Int      @id @default(autoincrement())
  payload   String   @unique
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Tracking {
  id        Int      @id @default(autoincrement())
  hashedId  String?
  eventName String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  originId  String?
  sex       String?
  type      String?
}

model KoboGamesPdList {
  id          Int      @id @default(autoincrement())
  productname String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model SSG_PO {
  id           Int      @id @default(autoincrement())
  ordNo        String?  @db.VarChar(15)
  ordDts       String?
  orgGb        String?
  itemId       String?  @db.VarChar(15)
  itemNm       String?  @db.VarChar(400)
  ordStatNm    String?
  sellprc      Int?
  ordAmt       Int?
  dcAmt        Int?
  rlordAmt     Int?
  rlordQty     Int?
  itemRegDivCd String?
  stdCtgId     String?  @db.VarChar(10)
  date         String?  @db.VarChar(10)
  channel      String?  @db.VarChar(30)
  media        String?  @db.VarChar(30)
  updateDate   String?
  affP1        String?
  postback     Boolean?
  reward       Boolean?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([ordNo, itemId, itemNm, stdCtgId, date, channel, media])
}

model SSG_PO_Channel {
  id                           Int                            @id @default(autoincrement())
  media                        String
  onOff                        Boolean
  channel                      String
  mediaObj                     SSG_PO_Media                   @relation(fields: [media], references: [media], onDelete: Cascade)
  SSG_DFINARY_TrackingLinkList SSG_DFINARY_TrackingLinkList[]
  createdAt                    DateTime?                      @default(now())
  updatedAt                    DateTime?                      @updatedAt

  @@index([media])
}

model SSG_PO_Media {
  id                           Int                            @id @default(autoincrement())
  onOff                        Boolean
  createdAt                    DateTime                       @default(now())
  updatedAt                    DateTime                       @updatedAt
  media                        String                         @unique
  SSG_PO_Channel               SSG_PO_Channel[]
  SSG_DFINARY_TrackingLinkList SSG_DFINARY_TrackingLinkList[]
}

model SSG_DFINARY {
  id Int @id @default(autoincrement())

  daily    String?
  tracker  String
  platform String?

  clickCount      Int?
  newInstallClick Int?
  reInstallClick  Int?
  reOpen          Int?

  pageView   Int?
  sumValue   Int?
  uniqueView Int?

  eventName String?
  mall      String
  category  String

  // channelId Int?
  // channel   SSG_PO_Channel? @relation(fields: [channelId], references: [id], onDelete: Cascade)

  // merterial   SSG_DFINARY_TrackingLinkList? @relation(fields: [merterialId], references: [id], onDelete: Cascade)

  // mediaId Int?
  // media   SSG_PO_Media? @relation(fields: [mediaId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SSG_DFINARY_TrackingLinkList {
  id               Int             @id @default(autoincrement())
  mall             String
  trackingLinkName String          @unique
  trackingLink     String?         @db.VarChar(600)
  division_1       String
  division_2       String
  materialName     String
  channel          SSG_PO_Channel? @relation(fields: [channelId], references: [id], onDelete: Cascade)
  channelId        Int?
  media            SSG_PO_Media?   @relation(fields: [mediaId], references: [id], onDelete: Cascade)
  mediaId          Int?
  user             User?           @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId           Int?
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt

  @@index([channelId])
  @@index([mediaId])
  @@index([userId])
}

model JOBKO_META_IMAGE {
  id        Int      @id @default(autoincrement())
  src       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  company   String?  @db.VarChar(400)
  originSrc String
  updateDate String?
  title String?
  career String?
  limitDay String?
  jobType String?
}

model JOBKO_META_IMAGE_FEED {
  id        Int      @id @default(autoincrement())
  company   String
  detail    String
  src       String?
  originSrc String?
  updateDate String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([company, detail]) // 복합 유니크 제약 조건
}
model GMARKET_LINKREW_DATA {
  id                    BigInt   @id @default(autoincrement())
  sortDate              DateTime
  linkrewSettleDailySeq Int
  serviceCode           Int
  subId                 Int
  orderAmount           Int
  orderNo               BigInt
  itemNo                String
  itemName              String
  paymentStatus         String
  orderDate             DateTime
  returnDate            DateTime? 
  transportCompletedDate DateTime
  paymentMoney          Float
  settleMoney           Float
  settleExpectedDate    DateTime
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
}
model ALBAMON_META_IMAGE {
  id        Int      @id @default(autoincrement())
  src       String
  originSrc String   @unique @db.VarChar(400)
  company   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SSG_PO_COOKIEOVEN {
  id           Int      @id @default(autoincrement())
  ordNo        String?
  ordDts       String?
  orgGb        String?
  itemId       String?
  itemNm       String?  @db.VarChar(400)
  ordStatNm    String?
  sellprc      Int?
  ordAmt       Int?
  dcAmt        Int?
  rlordAmt     Int?
  rlordQty     Int?
  itemRegDivCd String?
  stdCtgId     String?
  date         String?
  channel      String?
  media        String?
  updateDate   String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([channel])
  @@index([date])
  @@index([itemId])
  @@index([itemNm])
  @@index([media])
  @@index([ordNo])
  @@index([ordStatNm])
  @@index([orgGb])
  @@index([sellprc])
  @@index([stdCtgId])
}

model Order {
  id               Int       @id @default(autoincrement()) // Primary Key
  OrderDetail OrderDetail[] 
  ordNo            String?                                // 주문번호
  ordDts           String?                               // 주문일시
  itemId           String?                                // 상품번호
  itemNm           String?   @db.VarChar(400)             // 상품명
  categoryId       Int?                                  //카테고리id
  sellprc          Int?                                  // 판매가
  sortDate             DateTime?                              // 일자
  linkrewSettleDailySeq Int?                                  // 일집계번호
  serviceCode          Int?                                   // 매체
  subId                Int?                                   // 채널
  createdAt        DateTime  @default(now())             // 생성일
  updatedAt        DateTime  @updatedAt                  // 업데이트일
  
}
model OrderDetail {
  id                   Int       @id @default(autoincrement()) 
  paymentStatus        String?                               // 주문상태 (ordStatNm)
  orderAmount          Int?                                  // 주문금액 (ordAmt)
  orderDate            DateTime?                             // 주문날짜
  returnDate           DateTime?                             // 환불일자
  settleMoney          Float?                                // 예상수익
  createdAt            DateTime   @default(now())            // 생성일
  updatedAt            DateTime   @updatedAt                 // 업데이트일

  // Relation with Order
  Order                Order[]                               // 1:N 관계
}
