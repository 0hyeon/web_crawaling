// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
//yarn ts-node prisma/bannerMoCreate.ts
//n
//npx prisma generate
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model PcBanner {
  id        Int      @id @default(autoincrement())
  src       String?
  alt       String?
  title     String?
  href      String?  @db.LongText
  date      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MobieBanner {
  id        Int      @id @default(autoincrement())
  src       String?
  alt       String?
  title     String?
  href      String?  @db.LongText
  date      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  avatar    String?
  roll      Int?
  name_2    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tokens    Token[]
}

model Token {
  id        Int      @id @default(autoincrement())
  payload   String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Tracking {
  id        Int      @id @default(autoincrement())
  originId  String?
  sex       String?
  type      String?
  hashedId  String?
  eventName String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model JobkoAppsData {
  id        Int      @id @default(autoincrement())
  Category      String?
  AttributedTouchType String? 
  AttributedTouchTime String? 
  InstallTime String? 
  EventTime String?
  EventName String?
  Partner String?
  MediaSource String?
  Channel String?
  Keywords String?
  Campaign String?
  Adset String?
  Ad String?
  AdType String?
  Region String?
  CountryCode String?
  Carrier String?
  Language String?
  AppsFlyerID String?
  AndroidID String?
  AdvertisingID String?
  IDFA String?
  IDFV String?
  DeviceCategory String?
  Platform String?
  OSVersion String?
  AppVersion String?
  SDKVersion String?
  IsRetargeting Boolean?
  RetargetingConversionType String?
  IsPrimaryAttribution Boolean?
  AttributionLookback String?
  ReengagementWindow String?
  MatchType String?
  UserAgent String?
  ConversionType String?
  CampaignType String?
  DeviceModel String?
  KeywordID String?
  PivotTime String? 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model JobkoreaBackendData {
  id        Int      @id @default(autoincrement())
  eventTrans EventTrans[]
  aosMediaSource AosMediaSource[]
  iosMediaSource IosMediaSource[]
  aosAdvertising AosAdvertising[]
  messageRecipient MessageRecipient[]
  iosIDFA IosIDFA[]
  aosFetchEventNames AosFetchEventNames[]
  iosFetchEventNames IosFetchEventNames[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model EventTrans {
  id           Int      @id @default(autoincrement())
  eventName    String? 
  transEventName    String? 
  jobkoreaBackendData      JobkoreaBackendData     @relation(fields: [jobkoreaBackendDataId], references: [id], onDelete: Cascade)
  jobkoreaBackendDataId  Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  @@index([jobkoreaBackendDataId])
}
model AosMediaSource {
  id        Int      @id @default(autoincrement())
  mediaSource String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  jobkoreaBackendData      JobkoreaBackendData     @relation(fields: [jobkoreaBackendDataId], references: [id], onDelete: Cascade)
  jobkoreaBackendDataId  Int
  @@index([jobkoreaBackendDataId])
}
model IosMediaSource {
  id        Int      @id @default(autoincrement())
  content String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  jobkoreaBackendData      JobkoreaBackendData     @relation(fields: [jobkoreaBackendDataId], references: [id], onDelete: Cascade)
  jobkoreaBackendDataId  Int
  @@index([jobkoreaBackendDataId])
}


model AosAdvertising {
  id Int @id @default(autoincrement())
  cratedAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content String?
  jobkoreaBackendData      JobkoreaBackendData     @relation(fields: [jobkoreaBackendDataId], references: [id], onDelete: Cascade)
  jobkoreaBackendDataId  Int
  @@index([jobkoreaBackendDataId])
}
model MessageRecipient {
  id Int @id @default(autoincrement())
  cratedAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content String?
  jobkoreaBackendData      JobkoreaBackendData     @relation(fields: [jobkoreaBackendDataId], references: [id], onDelete: Cascade)
  jobkoreaBackendDataId  Int
  @@index([jobkoreaBackendDataId])
}
model IosIDFA {
  id Int @id @default(autoincrement())
  cratedAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content String?
  jobkoreaBackendData      JobkoreaBackendData     @relation(fields: [jobkoreaBackendDataId], references: [id], onDelete: Cascade)
  jobkoreaBackendDataId  Int
  @@index([jobkoreaBackendDataId])
}
model AosFetchEventNames {
  id Int @id @default(autoincrement())
  cratedAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content String?
  jobkoreaBackendData      JobkoreaBackendData     @relation(fields: [jobkoreaBackendDataId], references: [id], onDelete: Cascade)
  jobkoreaBackendDataId  Int
  @@index([jobkoreaBackendDataId])
}
model IosFetchEventNames {
  id Int @id @default(autoincrement())
  cratedAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content String?
  jobkoreaBackendData      JobkoreaBackendData     @relation(fields: [jobkoreaBackendDataId], references: [id], onDelete: Cascade)
  jobkoreaBackendDataId  Int
  @@index([jobkoreaBackendDataId])
}