generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model PcBanner {
  id        Int      @id @default(autoincrement())
  src       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  alt       String?
  title     String?
  href      String?  @db.LongText
  date      String?
}

model MobieBanner {
  id        Int      @id @default(autoincrement())
  src       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  alt       String?
  title     String?
  href      String?  @db.LongText
  date      String?
}

model User {
  id                           Int                            @id @default(autoincrement())
  name                         String
  avatar                       String?
  createdAt                    DateTime                       @default(now())
  updatedAt                    DateTime                       @updatedAt
  name_2                       String?
  roll                         Int?
  tokens                       Token[]
  SSG_DFINARY_TrackingLinkList SSG_DFINARY_TrackingLinkList[]
}

model Token {
  id        Int      @id @default(autoincrement())
  payload   String   @unique
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Tracking {
  id        Int      @id @default(autoincrement())
  hashedId  String?
  eventName String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  originId  String?
  sex       String?
  type      String?
}

model KoboGamesPdList {
  id          Int      @id @default(autoincrement())
  productname String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model SSG_PO {
  id           Int      @id @default(autoincrement())
  ordNo        String?
  ordDts       String?
  orgGb        String?
  itemId       String?
  itemNm       String?  @db.VarChar(400)
  ordStatNm    String?
  sellprc      Int?
  ordAmt       Int?
  dcAmt        Int?
  rlordAmt     Int?
  rlordQty     Int?
  itemRegDivCd String?
  stdCtgId     String?
  date         String?
  channel      String?
  media        String?
  updateDate   String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([channel])
  @@index([date])
  @@index([itemId])
  @@index([itemNm])
  @@index([media])
  @@index([ordNo])
  @@index([ordStatNm])
  @@index([orgGb])
  @@index([sellprc])
  @@index([stdCtgId])
}

model SSG_PO_Channel {
  id                           Int                            @id @default(autoincrement())
  media                        String
  onOff                        Boolean
  channel                      String
  mediaObj                     SSG_PO_Media                   @relation(fields: [media], references: [media], onDelete: Cascade)
  SSG_DFINARY_TrackingLinkList SSG_DFINARY_TrackingLinkList[]
  createdAt                    DateTime?                      @default(now())
  updatedAt                    DateTime?                      @updatedAt

  @@index([media])
}

model SSG_PO_Media {
  id                           Int                            @id @default(autoincrement())
  onOff                        Boolean
  createdAt                    DateTime                       @default(now())
  updatedAt                    DateTime                       @updatedAt
  media                        String                         @unique
  SSG_PO_Channel               SSG_PO_Channel[]
  SSG_DFINARY_TrackingLinkList SSG_DFINARY_TrackingLinkList[]
}

model SSG_DFINARY {
  id Int @id @default(autoincrement())

  daily    String?
  tracker  String
  platform String?

  clickCount      Int?
  newInstallClick Int?
  reInstallClick  Int?
  reOpen          Int?

  pageView   Int?
  sumValue   Int?
  uniqueView Int?

  eventName String?
  mall      String
  category  String

  // channelId Int?
  // channel   SSG_PO_Channel? @relation(fields: [channelId], references: [id], onDelete: Cascade)

  // merterial   SSG_DFINARY_TrackingLinkList? @relation(fields: [merterialId], references: [id], onDelete: Cascade)

  // mediaId Int?
  // media   SSG_PO_Media? @relation(fields: [mediaId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SSG_DFINARY_TrackingLinkList {
  id               Int             @id @default(autoincrement())
  mall             String
  trackingLinkName String          @unique
  trackingLink     String?         @db.VarChar(400)
  division_1       String
  division_2       String
  materialName     String
  channel          SSG_PO_Channel? @relation(fields: [channelId], references: [id], onDelete: Cascade)
  channelId        Int?
  media            SSG_PO_Media?   @relation(fields: [mediaId], references: [id], onDelete: Cascade)
  mediaId          Int?
  user             User?           @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId           Int?
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt

  @@index([channelId])
  @@index([mediaId])
  @@index([userId])
}
