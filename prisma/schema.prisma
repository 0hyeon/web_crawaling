// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
//yarn ts-node prisma/bannerMoCreate.ts
//n
//npx prisma generate
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
  // relationMode = "prisma"
}

model PcBanner {
  id        Int      @id @default(autoincrement())
  src       String?
  alt       String?
  title     String?
  href      String?  @db.LongText
  date      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MobieBanner {
  id        Int      @id @default(autoincrement())
  src       String?
  alt       String?
  title     String?
  href      String?  @db.LongText
  date      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  avatar    String?
  roll      Int?
  name_2    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tokens    Token[]
}

model Token {
  id        Int      @id @default(autoincrement())
  payload   String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Tracking {
  id        Int      @id @default(autoincrement())
  originId  String?
  sex       String?
  type      String?
  hashedId  String?
  eventName String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model KoboGamesPdList {
  id          Int      @id @default(autoincrement())
  productname String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model SSG_PO {
  id           Int           @id @default(autoincrement())
  ordNo        String?
  ordDts       String?
  orgGb        String?
  itemId       String?
  itemNm       String?       @db.VarChar(400)
  ordStatNm    String?
  sellprc      Int?
  ordAmt       Int?
  dcAmt        Int?
  rlordAmt     Int?
  rlordQty     Int?
  itemRegDivCd String?
  stdCtgId     String?
  date         String?
  channel      String?
  // media        String?
  updateDate   String?
  // channel   SSG_PO_Channel @relation(fields: [channelId], references: [id], onDelete: Cascade)
  // channelId Int
  mediaForId   SSG_PO_Media? @relation(fields: [media], references: [id], onDelete: Cascade) //여러개의 media를 가지고있음
  media        String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([media])
}

model SSG_PO_Media {
  id        String           @id @unique
  SSG_PO    SSG_PO[]
  channel   SSG_PO_Channel[]
  onOff     Boolean
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
}

model SSG_PO_Channel {
  id         String       @id @unique
  mediaForId SSG_PO_Media @relation(fields: [media], references: [id], onDelete: Cascade) //여러개의 media를 가지고있음
  media      String

  onOff     Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([media])
}
